{"ast":null,"code":"var _jsxFileName = \"/Users/alinoki/Desktop/my-app/src/components/SearchBar/SearchBar.tsx\",\n    _s = $RefreshSig$();\n\nimport React\n/*, { Component, useState, useEffect}*/\nfrom 'react';\nimport { Select } from 'grommet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import { fetchProductList } from '../../store/productListSlice';\n// const handleClick = ({currentTarget}) => {\n// }\nexport const SearchBar = props => {\n  _s();\n\n  const count1 = useSelector(state => state.counter.products);\n  const [value, setValue] = React.useState();\n  const count = 0;\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: e => {\n      console.log(console.log(count + 1));\n    },\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      placeholder: \"Choose your fighter\",\n      options: props.options //   options={['ff', 'ss']}\n      ,\n      value: value,\n      onChange: _ref => {\n        let {\n          option\n        } = _ref;\n        return setValue(option);\n      } //   onClick={(e) => dispatch(addProductIndex(props.options.indexOf(e.currentTarget.value)))}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, this);\n};\n\n_s(SearchBar, \"cnOjI0RJhfBFziL7OEbXC5mZAnA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","Select","useDispatch","useSelector","SearchBar","props","count1","state","counter","products","value","setValue","useState","count","dispatch","e","console","log","options","option"],"sources":["/Users/alinoki/Desktop/my-app/src/components/SearchBar/SearchBar.tsx"],"sourcesContent":["import React /*, { Component, useState, useEffect}*/ from 'react';\nimport {Select} from 'grommet';\nimport { addProductIndex, counterSlice } from '../../store/productListSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../store';\nimport { constants } from 'buffer';\n// import { fetchProductList } from '../../store/productListSlice';\n\n\n// const handleClick = ({currentTarget}) => {\n// }\n\nexport const SearchBar = (props: {options: string[]}) => {\n\t\tconst count1 = useSelector((state: RootState) => state.counter.products)\n\t  const [value, setValue] = React.useState();\n\t  const count: number = 0;\n\t  const dispatch = useDispatch();\n\t  return (\n\t\t<div onClick={(e) => { console.log(console.log(count+1))}}>\n\t\t<Select\n\t\t  \n\t\t  placeholder=\"Choose your fighter\"\n\t\t  options={props.options}\n\t\t//   options={['ff', 'ss']}\n\t\t  \n\t\t  value={value}\n\t\t  onChange={({ option }) => setValue(option)}\n\t\t//   onClick={(e) => dispatch(addProductIndex(props.options.indexOf(e.currentTarget.value)))}\n\t\t/>\n\t\t<span>{count}</span>\n\t\t</div>\n\t  );\n};\n"],"mappings":";;;AAAA,OAAOA;AAAM;AAAb,KAA0D,OAA1D;AACA,SAAQC,MAAR,QAAqB,SAArB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAGA;AAGA;AACA;AAEA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAgC;EAAA;;EACvD,MAAMC,MAAM,GAAGH,WAAW,CAAEI,KAAD,IAAsBA,KAAK,CAACC,OAAN,CAAcC,QAArC,CAA1B;EACC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,KAAK,CAACY,QAAN,EAA1B;EACA,MAAMC,KAAa,GAAG,CAAtB;EACA,MAAMC,QAAQ,GAAGZ,WAAW,EAA5B;EACA,oBACD;IAAK,OAAO,EAAGa,CAAD,IAAO;MAAEC,OAAO,CAACC,GAAR,CAAYD,OAAO,CAACC,GAAR,CAAYJ,KAAK,GAAC,CAAlB,CAAZ;IAAkC,CAAzD;IAAA,wBACA,QAAC,MAAD;MAEE,WAAW,EAAC,qBAFd;MAGE,OAAO,EAAER,KAAK,CAACa,OAHjB,CAIA;MAJA;MAME,KAAK,EAAER,KANT;MAOE,QAAQ,EAAE;QAAA,IAAC;UAAES;QAAF,CAAD;QAAA,OAAgBR,QAAQ,CAACQ,MAAD,CAAxB;MAAA,CAPZ,CAQA;;IARA;MAAA;MAAA;MAAA;IAAA,QADA,eAWA;MAAA,UAAON;IAAP;MAAA;MAAA;MAAA;IAAA,QAXA;EAAA;IAAA;IAAA;IAAA;EAAA,QADC;AAeF,CApBM;;GAAMT,S;UACID,W,EAGGD,W;;;KAJPE,S"},"metadata":{},"sourceType":"module"}