{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit'; // import { Action, Actions } from 'grommet-icons';\n// import axios from 'axios';\n\nconst initialState = {\n  value: 0,\n  productsList: [],\n  productsIndex: []\n};\nexport const counterSlice = createSlice({\n  name: 'counter',\n  //имя нашего слайса\n  initialState,\n  // задаёшь\n  reducers: {\n    //пишешь какие редьюсеры что делают\n    increment: state => {\n      state.value += 1;\n    },\n    decrement: state => {\n      state.value -= 1;\n    },\n    addProductsList: (state, action) => {\n      state.productsList = action.payload;\n    },\n    addProductIndex: (state, action) => {\n      state.productsIndex.push(action.payload);\n    }\n  }\n});\nexport const {\n  increment,\n  decrement,\n  addProductIndex,\n  addProductsList\n} = counterSlice.actions;\nexport default counterSlice.reducer; // const init: string[] = [];\n// export const [state, setState] = useState(init);\n// const URL: string = 'http://www.filltext.com/?rows=10&fname={firstName}&lname={lastName}&pretty=true'\n// export const fetchData = createAsyncThunk('fetchData', async () => {\n// \tconst response = await axios.get(\n// \t  URL,{\n// \t\theaders: {\n// \t\t  'Accept': 'application/json'\n// \t\t}\n// \t  }\n// \t);\n// \tconst data_clean: cleanData = response.data.map((item: titem) => {\n// \t\treturn {person: item.fname + ' ' + item.lname}\n// \t  });\n// \t  let res: string[] = [];\n// \t  for (let i = 0; i < data_clean.length; i++)\n// \t\tres.push(data_clean[i].person)\n// \tsetState(res);\n//   });","map":{"version":3,"names":["createSlice","initialState","value","productsList","productsIndex","counterSlice","name","reducers","increment","state","decrement","addProductsList","action","payload","addProductIndex","push","actions","reducer"],"sources":["/Users/alinoki/Desktop/my-app/src/store/productListSlice.ts"],"sourcesContent":["import { createSlice,/*, nanoid, createAsyncThunk */\nPayloadAction} from '@reduxjs/toolkit';\n// import { Action, Actions } from 'grommet-icons';\n// import axios from 'axios';\n\ninterface CounterState {\n\tvalue: number;\n\tproductsList: string[];\n\tproductsIndex: number[];\n}\n\nconst initialState: CounterState = {\n\tvalue: 0,\n\tproductsList: [],\n\tproductsIndex: []\n}\n\nexport const counterSlice = createSlice({\n\tname: 'counter', //имя нашего слайса\n    initialState, // задаёшь\n\treducers: { //пишешь какие редьюсеры что делают\n        increment: (state) => {\n\t\t\tstate.value += 1;\n\t\t},\n\t\tdecrement: (state) => {\n\t\t\tstate.value -= 1;\n\t\t\t},\n\t\taddProductsList: (state, action: PayloadAction<string[]>) => {\n\t\t\tstate.productsList = action.payload;\n\t\t},\n\t\taddProductIndex: (state, action: PayloadAction<number>) => {\n\t\t\tstate.productsIndex.push(action.payload);\n\t\t}\n\t}\n});\n\n\nexport const { increment, decrement, addProductIndex, addProductsList } = counterSlice.actions\n\nexport default counterSlice.reducer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const init: string[] = [];\n// export const [state, setState] = useState(init);\n// const URL: string = 'http://www.filltext.com/?rows=10&fname={firstName}&lname={lastName}&pretty=true'\n\n// export const fetchData = createAsyncThunk('fetchData', async () => {\n// \tconst response = await axios.get(\n// \t  URL,{\n// \t\theaders: {\n// \t\t  'Accept': 'application/json'\n// \t\t}\n// \t  }\n// \t);\n// \tconst data_clean: cleanData = response.data.map((item: titem) => {\n// \t\treturn {person: item.fname + ' ' + item.lname}\n// \t  });\n// \t  let res: string[] = [];\n// \t  for (let i = 0; i < data_clean.length; i++)\n// \t\tres.push(data_clean[i].person)\n// \tsetState(res);\n//   });"],"mappings":"AAAA,SAASA,WAAT,QACoB,kBADpB,C,CAEA;AACA;;AAQA,MAAMC,YAA0B,GAAG;EAClCC,KAAK,EAAE,CAD2B;EAElCC,YAAY,EAAE,EAFoB;EAGlCC,aAAa,EAAE;AAHmB,CAAnC;AAMA,OAAO,MAAMC,YAAY,GAAGL,WAAW,CAAC;EACvCM,IAAI,EAAE,SADiC;EACtB;EACdL,YAFoC;EAEtB;EACjBM,QAAQ,EAAE;IAAE;IACLC,SAAS,EAAGC,KAAD,IAAW;MAC3BA,KAAK,CAACP,KAAN,IAAe,CAAf;IACA,CAHQ;IAITQ,SAAS,EAAGD,KAAD,IAAW;MACrBA,KAAK,CAACP,KAAN,IAAe,CAAf;IACC,CANO;IAOTS,eAAe,EAAE,CAACF,KAAD,EAAQG,MAAR,KAA4C;MAC5DH,KAAK,CAACN,YAAN,GAAqBS,MAAM,CAACC,OAA5B;IACA,CATQ;IAUTC,eAAe,EAAE,CAACL,KAAD,EAAQG,MAAR,KAA0C;MAC1DH,KAAK,CAACL,aAAN,CAAoBW,IAApB,CAAyBH,MAAM,CAACC,OAAhC;IACA;EAZQ;AAH6B,CAAD,CAAhC;AAoBP,OAAO,MAAM;EAAEL,SAAF;EAAaE,SAAb;EAAwBI,eAAxB;EAAyCH;AAAzC,IAA6DN,YAAY,CAACW,OAAhF;AAEP,eAAeX,YAAY,CAACY,OAA5B,C,CAiBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}