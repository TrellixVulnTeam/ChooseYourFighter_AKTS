{"ast":null,"code":"var _jsxFileName = \"/Users/alinoki/Desktop/my-app/src/components/SearchBar/SearchBar.tsx\",\n    _s = $RefreshSig$();\n\nimport React\n/*, { Component, useState, useEffect}*/\nfrom 'react';\nimport { Select } from 'grommet';\nimport { addProductIndex } from '../../store/productListSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import { fetchProductList } from '../../store/productListSlice';\n// const handleClick = ({currentTarget}) => {\n// }\n// const cutTags = (str: string) => {\n// \tvar regex = '/( |<([^>]+)>)/ig',\n// \t\tresult = str.replace(regex, \"\");\n// \t\treturn result;\n//    }\nexport const SearchBar = props => {\n  _s();\n\n  const count1 = useSelector(state => state.counter.products);\n  const [value, setValue] = React.useState();\n  let index;\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: e => {\n      let str;\n      let index;\n\n      if (e.target.innerText) {\n        str = e.target.innerText;\n        index = props.options.indexOf(str);\n\n        if (index >= 0 && index < props.options.length) {\n          dispatch(addProductIndex(props.options.indexOf(str)));\n          console.log(index);\n        }\n      }\n\n      console.log(count1);\n    },\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      placeholder: \"Choose your fighter\",\n      options: props.options //   options={['ff', 'ss']}\n      ,\n      value: value //   onChange={({ option }) => setValue(option)}\n      // onClick={(e) => }\n      //   onClick={(e) => dispatch(addProductIndex(props.options.indexOf(e.currentTarget.value)))}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: count1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 11\n  }, this);\n};\n\n_s(SearchBar, \"cnOjI0RJhfBFziL7OEbXC5mZAnA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","Select","addProductIndex","useDispatch","useSelector","SearchBar","props","count1","state","counter","products","value","setValue","useState","index","dispatch","e","str","target","innerText","options","indexOf","length","console","log"],"sources":["/Users/alinoki/Desktop/my-app/src/components/SearchBar/SearchBar.tsx"],"sourcesContent":["import React /*, { Component, useState, useEffect}*/ from 'react';\nimport {Select} from 'grommet';\nimport { addProductIndex, counterSlice } from '../../store/productListSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../store';\nimport { constants } from 'buffer';\n// import { fetchProductList } from '../../store/productListSlice';\n\n\n// const handleClick = ({currentTarget}) => {\n// }\n\n\n// const cutTags = (str: string) => {\n// \tvar regex = '/( |<([^>]+)>)/ig',\n// \t\tresult = str.replace(regex, \"\");\n   \n// \t\treturn result;\n//    }\n\n   \nexport const SearchBar = (props: {options: string[]}) => {\n\t\tconst count1 = useSelector((state: RootState) => state.counter.products)\n\t  const [value, setValue] = React.useState();\n\t  let index: number;\n\t  const dispatch = useDispatch();\n\t  return (\n          <div onClick={(e) => {\n            \tlet str: string;\n\t\t\t\tlet index: number;\n            \tif ((e.target as HTMLElement).innerText) {\n\t\t\t\t\tstr = (e.target as HTMLElement).innerText;\n\t\t\t\t\tindex = props.options.indexOf(str);\n\t\t\t\t\tif (index >= 0 && index < props.options.length) {\n\t\t\t\t\t\tdispatch(addProductIndex(props.options.indexOf(str)));\n\t\t\t\t\t\tconsole.log(index);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconsole.log(count1);\n          }\n          }\n          >\n          <Select\n            \n            placeholder=\"Choose your fighter\"\n            options={props.options}\n          //   options={['ff', 'ss']}\n            \n            value={value}\n          //   onChange={({ option }) => setValue(option)}\n          // onClick={(e) => }\n          //   onClick={(e) => dispatch(addProductIndex(props.options.indexOf(e.currentTarget.value)))}\n          />\n          <span>{count1}</span>\n          </div>\n      );\n};\n"],"mappings":";;;AAAA,OAAOA;AAAM;AAAb,KAA0D,OAA1D;AACA,SAAQC,MAAR,QAAqB,SAArB;AACA,SAASC,eAAT,QAA8C,8BAA9C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAGA;AAGA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAGA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAgC;EAAA;;EACvD,MAAMC,MAAM,GAAGH,WAAW,CAAEI,KAAD,IAAsBA,KAAK,CAACC,OAAN,CAAcC,QAArC,CAA1B;EACC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,KAAK,CAACa,QAAN,EAA1B;EACA,IAAIC,KAAJ;EACA,MAAMC,QAAQ,GAAGZ,WAAW,EAA5B;EACA,oBACO;IAAK,OAAO,EAAGa,CAAD,IAAO;MAClB,IAAIC,GAAJ;MACT,IAAIH,KAAJ;;MACS,IAAKE,CAAC,CAACE,MAAH,CAA0BC,SAA9B,EAAyC;QACjDF,GAAG,GAAID,CAAC,CAACE,MAAH,CAA0BC,SAAhC;QACAL,KAAK,GAAGR,KAAK,CAACc,OAAN,CAAcC,OAAd,CAAsBJ,GAAtB,CAAR;;QACA,IAAIH,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAGR,KAAK,CAACc,OAAN,CAAcE,MAAxC,EAAgD;UAC/CP,QAAQ,CAACb,eAAe,CAACI,KAAK,CAACc,OAAN,CAAcC,OAAd,CAAsBJ,GAAtB,CAAD,CAAhB,CAAR;UACAM,OAAO,CAACC,GAAR,CAAYV,KAAZ;QACA;MACD;;MACDS,OAAO,CAACC,GAAR,CAAYjB,MAAZ;IACO,CAZD;IAAA,wBAeA,QAAC,MAAD;MAEE,WAAW,EAAC,qBAFd;MAGE,OAAO,EAAED,KAAK,CAACc,OAHjB,CAIA;MAJA;MAME,KAAK,EAAET,KANT,CAOA;MACA;MACA;;IATA;MAAA;MAAA;MAAA;IAAA,QAfA,eA0BA;MAAA,UAAOJ;IAAP;MAAA;MAAA;MAAA;IAAA,QA1BA;EAAA;IAAA;IAAA;IAAA;EAAA,QADP;AA8BF,CAnCM;;GAAMF,S;UACID,W,EAGGD,W;;;KAJPE,S"},"metadata":{},"sourceType":"module"}