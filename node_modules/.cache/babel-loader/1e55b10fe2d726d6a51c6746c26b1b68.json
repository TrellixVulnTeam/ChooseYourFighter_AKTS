{"ast":null,"code":"var _jsxFileName = \"/Users/alinoki/Desktop/my-app/src/components/SearchBar/SearchBar.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Select } from 'grommet';\nimport { addProductIndex, addProductsList } from '../../store/Slices/productListSlice';\nimport { addProducts } from '../../store/Slices/productsSlice';\nimport { useDispatch } from 'react-redux'; // import { RootState } from '../../store';\n\nimport { useSelector } from 'react-redux'; // import { CardFlip } from '../FlipCard/CardFlip';\n\nimport '../../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SearchBar = props => {\n  _s();\n\n  const indexes = [];\n  const product_nums = useSelector();\n  const [value] = React.useState();\n  const dispatch = useDispatch();\n  dispatch(addProductsList(props.options));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: e => {\n      //TODO вообще-то можно просто сразу имена передавать НО МНЕ ЖАЛЬ ЭТО ЗАТИРАТЬ\n      let str;\n      let index;\n\n      if (e.target.innerText) {\n        //вытаскиваем текст из хтмл описания места куда тыкнули и если там внутри есть имечко то движемся дальше\n        str = e.target.innerText;\n        index = props.options.indexOf(str); //ищем индекс имени\n\n        if (index >= 0 && index < props.options.length && indexes.find(i => i === index) !== index) {\n          indexes.push(index);\n          dispatch(addProductIndex(props.options.indexOf(str))); //изменяем глобальный стейт, добавляя туда индексы тыкнутых чечиков\n\n          dispatch(addProducts(str)); //\n          // console.log(indexes, '\\n', index, '\\n', indexes.find((i) => i == index));\n        }\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      placeholder: \"Choose your fighter\",\n      options: props.options,\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 10\n  }, this);\n}; // export const AddCard = () => {\n// }\n\n_s(SearchBar, \"HhQBubRj+dU1cHikcUUNe7Hte30=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","Select","addProductIndex","addProductsList","addProducts","useDispatch","useSelector","SearchBar","props","indexes","product_nums","value","useState","dispatch","options","e","str","index","target","innerText","indexOf","length","find","i","push"],"sources":["/Users/alinoki/Desktop/my-app/src/components/SearchBar/SearchBar.tsx"],"sourcesContent":["import React from 'react';\nimport {Select} from 'grommet';\nimport {addProductIndex, addProductsList } from '../../store/Slices/productListSlice';\nimport { addProducts } from '../../store/Slices/productsSlice';\nimport {useDispatch} from 'react-redux';\n// import { RootState } from '../../store';\nimport { useSelector } from 'react-redux';\n// import { CardFlip } from '../FlipCard/CardFlip';\nimport '../../App.css'\n\n\nexport const SearchBar = (props: {options: string[]}) => {\n\t\tconst indexes: number[] = [];\n\t\tconst product_nums = useSelector()\n\t\tconst [value] = React.useState();\n\t\tconst dispatch = useDispatch();\n\t\tdispatch(addProductsList(props.options))\n\t\treturn (\n        \t<div onClick={(e) => {\n\t\t\t\t//TODO вообще-то можно просто сразу имена передавать НО МНЕ ЖАЛЬ ЭТО ЗАТИРАТЬ\n\t\t\t\t\tlet str: string;\n\t\t\t\t\tlet index: number;\n\t\t\t\t\tif ((e.target as HTMLElement).innerText) { //вытаскиваем текст из хтмл описания места куда тыкнули и если там внутри есть имечко то движемся дальше\n\t\t\t\t\t\tstr = (e.target as HTMLElement).innerText;\n\t\t\t\t\t\tindex = props.options.indexOf(str); //ищем индекс имени\n\t\t\t\t\t\tif (index >= 0 && index < props.options.length && \n\t\t\t\t\t\t\t\t(indexes.find((i) => i === index)) !== index) {\n\t\t\t\t\t\t\tindexes.push(index);\n\t\t\t\t\t\t\tdispatch(addProductIndex(props.options.indexOf(str))); //изменяем глобальный стейт, добавляя туда индексы тыкнутых чечиков\n\t\t\t\t\t\t\tdispatch(addProducts(str)); //\n\t\t\t\t\t\t\t// console.log(indexes, '\\n', index, '\\n', indexes.find((i) => i == index));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t}\n          \t>\n          \t<Select\n            \tplaceholder=\"Choose your fighter\"\n            \toptions={props.options}\n            \tvalue={value}\n        \t/>\n        \t</div>\t\n      );\n};\n\n\n// export const AddCard = () => {\n\n// }"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,SAArB;AACA,SAAQC,eAAR,EAAyBC,eAAzB,QAAgD,qCAAhD;AACA,SAASC,WAAT,QAA4B,kCAA5B;AACA,SAAQC,WAAR,QAA0B,aAA1B,C,CACA;;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CACA;;AACA,OAAO,eAAP;;AAGA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAgC;EAAA;;EACvD,MAAMC,OAAiB,GAAG,EAA1B;EACA,MAAMC,YAAY,GAAGJ,WAAW,EAAhC;EACA,MAAM,CAACK,KAAD,IAAUX,KAAK,CAACY,QAAN,EAAhB;EACA,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;EACAQ,QAAQ,CAACV,eAAe,CAACK,KAAK,CAACM,OAAP,CAAhB,CAAR;EACA,oBACO;IAAK,OAAO,EAAGC,CAAD,IAAO;MAC1B;MACC,IAAIC,GAAJ;MACA,IAAIC,KAAJ;;MACA,IAAKF,CAAC,CAACG,MAAH,CAA0BC,SAA9B,EAAyC;QAAE;QAC1CH,GAAG,GAAID,CAAC,CAACG,MAAH,CAA0BC,SAAhC;QACAF,KAAK,GAAGT,KAAK,CAACM,OAAN,CAAcM,OAAd,CAAsBJ,GAAtB,CAAR,CAFwC,CAEJ;;QACpC,IAAIC,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAGT,KAAK,CAACM,OAAN,CAAcO,MAApC,IACDZ,OAAO,CAACa,IAAR,CAAcC,CAAD,IAAOA,CAAC,KAAKN,KAA1B,CAAD,KAAuCA,KADzC,EACgD;UAC/CR,OAAO,CAACe,IAAR,CAAaP,KAAb;UACAJ,QAAQ,CAACX,eAAe,CAACM,KAAK,CAACM,OAAN,CAAcM,OAAd,CAAsBJ,GAAtB,CAAD,CAAhB,CAAR,CAF+C,CAEQ;;UACvDH,QAAQ,CAACT,WAAW,CAACY,GAAD,CAAZ,CAAR,CAH+C,CAGnB;UAC5B;QACA;MACD;IACD,CAfI;IAAA,uBAkBE,QAAC,MAAD;MACE,WAAW,EAAC,qBADd;MAEE,OAAO,EAAER,KAAK,CAACM,OAFjB;MAGE,KAAK,EAAEH;IAHT;MAAA;MAAA;MAAA;IAAA;EAlBF;IAAA;IAAA;IAAA;EAAA,QADP;AA0BD,CAhCM,C,CAmCP;AAEA;;GArCaJ,S;UAEUD,W,EAEJD,W;;;KAJNE,S"},"metadata":{},"sourceType":"module"}