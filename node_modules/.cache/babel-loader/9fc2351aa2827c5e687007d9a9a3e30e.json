{"ast":null,"code":"var _jsxFileName = \"/Users/alinoki/Desktop/my-app/src/components/SearchBar/SearchBar.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Select } from 'grommet';\nimport { addProductIndex, addProductsList } from '../../store/productListSlice';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { CardFlip } from '../FlipCard/CardFlip';\nimport '../../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SearchBar = props => {\n  _s();\n\n  const index = useSelector(state => state.counter.productsIndex);\n  const arr = useSelector(state => state.counter.productsList);\n  const [value] = React.useState();\n  const dispatch = useDispatch();\n  dispatch(addProductsList(props.options));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: e => {\n        //TODO вообще-то можно просто сразу имена передавать НО МНЕ ЖАЛЬ ЭТО ЗАТИРАТЬ\n        let str;\n        let index;\n\n        if (e.target.innerText) {\n          //вытаскиваем текст из хтмл описания места куда тыкнули и если там внутри есть имечко то движемся дальше\n          str = e.target.innerText;\n          index = props.options.indexOf(str); //ищем индекс имени\n\n          if (index >= 0 && index < props.options.length) {\n            dispatch(addProductIndex(props.options.indexOf(str))); //изменяем глобальный стейт, добавляя туда индексы тыкнутых чечиков\n            // console.log(index);\n          }\n        } // console.log(count1);\n\n      },\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"Choose your fighter\",\n        options: props.options,\n        value: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: /*#__PURE__*/_jsxDEV(CardFlip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: /*#__PURE__*/_jsxDEV(CardFlip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: /*#__PURE__*/_jsxDEV(CardFlip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      children: /*#__PURE__*/_jsxDEV(CardFlip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SearchBar, \"rTGqo2PqLAKM88MSruN0xS3XvB0=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","Select","addProductIndex","addProductsList","useDispatch","useSelector","CardFlip","SearchBar","props","index","state","counter","productsIndex","arr","productsList","value","useState","dispatch","options","e","str","target","innerText","indexOf","length"],"sources":["/Users/alinoki/Desktop/my-app/src/components/SearchBar/SearchBar.tsx"],"sourcesContent":["import React from 'react';\nimport {Select} from 'grommet';\nimport {addProductIndex, addProductsList } from '../../store/productListSlice';\nimport {useDispatch} from 'react-redux';\nimport { RootState } from '../../store';\nimport { useSelector } from 'react-redux';\nimport { CardFlip } from '../FlipCard/CardFlip';\nimport '../../App.css'\n\n\nexport const SearchBar = (props: {options: string[]}) => {\n\t\tconst index = useSelector((state: RootState) => state.counter.productsIndex)\n\t\tconst arr = useSelector((state: RootState) => state.counter.productsList)\n\t  const [value] = React.useState();\n\t  const dispatch = useDispatch();\n\t  dispatch(addProductsList(props.options))\n\t  return (\n\t\t<>\n          <div onClick={(e) => {\n\t\t\t//TODO вообще-то можно просто сразу имена передавать НО МНЕ ЖАЛЬ ЭТО ЗАТИРАТЬ\n            \tlet str: string;\n\t\t\t\tlet index: number;\n            \tif ((e.target as HTMLElement).innerText) { //вытаскиваем текст из хтмл описания места куда тыкнули и если там внутри есть имечко то движемся дальше\n\t\t\t\t\tstr = (e.target as HTMLElement).innerText;\n\t\t\t\t\tindex = props.options.indexOf(str); //ищем индекс имени\n\t\t\t\t\tif (index >= 0 && index < props.options.length) {\n\t\t\t\t\t\tdispatch(addProductIndex(props.options.indexOf(str))); //изменяем глобальный стейт, добавляя туда индексы тыкнутых чечиков\n\t\t\t\t\t\t// console.log(index);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// console.log(count1);\n          }\n          }\n          >\n          <Select\n            \n            placeholder=\"Choose your fighter\"\n            options={props.options}\n            value={value}\n          />\n          {/* <ol>{count}</ol>\n          <ol>{count1}</ol> */}\n          </div>\n\t\t  <div className=\"row\">\n\t\t  <div className=\"column\"><CardFlip></CardFlip></div>\n\t\t  <div className=\"column\"><CardFlip></CardFlip></div>\n\t\t  <div className=\"column\"><CardFlip></CardFlip></div>\n\t\t  </div>\n\t\t  <div className=\"column\"><CardFlip>{}</CardFlip></div>\n\n\t\t  </>\n      );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,SAArB;AACA,SAAQC,eAAR,EAAyBC,eAAzB,QAAgD,8BAAhD;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,OAAO,eAAP;;;AAGA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAgC;EAAA;;EACvD,MAAMC,KAAK,GAAGJ,WAAW,CAAEK,KAAD,IAAsBA,KAAK,CAACC,OAAN,CAAcC,aAArC,CAAzB;EACA,MAAMC,GAAG,GAAGR,WAAW,CAAEK,KAAD,IAAsBA,KAAK,CAACC,OAAN,CAAcG,YAArC,CAAvB;EACC,MAAM,CAACC,KAAD,IAAUf,KAAK,CAACgB,QAAN,EAAhB;EACA,MAAMC,QAAQ,GAAGb,WAAW,EAA5B;EACAa,QAAQ,CAACd,eAAe,CAACK,KAAK,CAACU,OAAP,CAAhB,CAAR;EACA,oBACD;IAAA,wBACQ;MAAK,OAAO,EAAGC,CAAD,IAAO;QAC5B;QACU,IAAIC,GAAJ;QACT,IAAIX,KAAJ;;QACS,IAAKU,CAAC,CAACE,MAAH,CAA0BC,SAA9B,EAAyC;UAAE;UACnDF,GAAG,GAAID,CAAC,CAACE,MAAH,CAA0BC,SAAhC;UACAb,KAAK,GAAGD,KAAK,CAACU,OAAN,CAAcK,OAAd,CAAsBH,GAAtB,CAAR,CAFiD,CAEb;;UACpC,IAAIX,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAGD,KAAK,CAACU,OAAN,CAAcM,MAAxC,EAAgD;YAC/CP,QAAQ,CAACf,eAAe,CAACM,KAAK,CAACU,OAAN,CAAcK,OAAd,CAAsBH,GAAtB,CAAD,CAAhB,CAAR,CAD+C,CACQ;YACvD;UACA;QACD,CAX0B,CAY3B;;MACO,CAbD;MAAA,uBAgBA,QAAC,MAAD;QAEE,WAAW,EAAC,qBAFd;QAGE,OAAO,EAAEZ,KAAK,CAACU,OAHjB;QAIE,KAAK,EAAEH;MAJT;QAAA;QAAA;QAAA;MAAA;IAhBA;MAAA;MAAA;MAAA;IAAA,QADR,eA0BE;MAAK,SAAS,EAAC,KAAf;MAAA,wBACA;QAAK,SAAS,EAAC,QAAf;QAAA,uBAAwB,QAAC,QAAD;UAAA;UAAA;UAAA;QAAA;MAAxB;QAAA;QAAA;QAAA;MAAA,QADA,eAEA;QAAK,SAAS,EAAC,QAAf;QAAA,uBAAwB,QAAC,QAAD;UAAA;UAAA;UAAA;QAAA;MAAxB;QAAA;QAAA;QAAA;MAAA,QAFA,eAGA;QAAK,SAAS,EAAC,QAAf;QAAA,uBAAwB,QAAC,QAAD;UAAA;UAAA;UAAA;QAAA;MAAxB;QAAA;QAAA;QAAA;MAAA,QAHA;IAAA;MAAA;MAAA;MAAA;IAAA,QA1BF,eA+BE;MAAK,SAAS,EAAC,QAAf;MAAA,uBAAwB,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA;IAAxB;MAAA;MAAA;MAAA;IAAA,QA/BF;EAAA,gBADC;AAoCF,CA1CM;;GAAMR,S;UACGF,W,EACFA,W,EAEMD,W;;;KAJPG,S"},"metadata":{},"sourceType":"module"}