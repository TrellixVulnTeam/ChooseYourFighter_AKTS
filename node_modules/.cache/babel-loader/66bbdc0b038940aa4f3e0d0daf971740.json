{"ast":null,"code":"var _jsxFileName = \"/Users/alinoki/Desktop/my-app/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Grommet, Button } from 'grommet';\nimport logo from \"./icon_sber-01.png\";\nimport './App.css';\nimport { AppBar, AppBarPre } from './components/index';\nimport { theme } from './constants/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = 'http://www.filltext.com/?rows=10&fname={firstName}&lname={lastName}&pretty=true'; // const fetchedData = fetch(URL)\n// .then((response) => {\n// if (!response.ok) {\n//   throw new Error(`HTTP error, status = ${response.status}`);\n// }\n// return response.json();\n// })\n// .then(\n//   (data) => {\n//     // console.log(\"sfdsferfaerfsfraserafrf\");\n//     const data_clean: cleanData = data.map((item: titem) => {\n//       return {person: item.fname + ' ' + item.lname}\n//     });\n//     // console.log(\"AAAAAAAAAAAAAAAAAAAAA\");\n//     let res: string[] = [];\n//     for (let i = 0; i < data_clean.length; i++)\n//       res.push(data_clean[i].person)\n//     console.log(res, typeof res);\n//     // <SearchBar options={res}></SearchBar>\n//     return res;\n//   })\n// let res = (axios.get(URL).then((response) => console.log(response.data)));\n// console.log(typeof res, res);\n//reduxtoolkit  стор сделать     ЕСЛИ ГОТОВА clm>account>store>config\n//пока без танков разюбрись как сделать стор с редах\n\nconst App = () => {\n  _s();\n\n  const [state, setState] = useState([]);\n  useEffect(() => {\n    fetch(URL).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error, status = ${response.status}`);\n      }\n\n      return response.json();\n    }).then(data => {\n      console.log(typeof data); // console.log(\"sfdsferfaerfsfraserafrf\");\n\n      const data_clean = data.map(item => {\n        return {\n          person: item.fname + ' ' + item.lname\n        };\n      }); // console.log(\"AAAAAAAAAAAAAAAAAAAAA\");\n\n      let res = [];\n\n      for (let i = 0; i < data_clean.length; i++) res.push(data_clean[i].person);\n\n      console.log(res, typeof res); // <SearchBar options={res}></SearchBar>\n\n      return res;\n    }).then(_ref => {\n      let {\n        data: state\n      } = _ref;\n      setState(res);\n    });\n  }); // fetchedData.then((data) => setState(data)));\n  // useEffect(() => {}, [state]);\n\n  return /*#__PURE__*/_jsxDEV(Grommet, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(AppBarPre, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"logo\",\n          width: \"30px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          className: \"p4\",\n          children: \"POWERED BY ALINA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        primary: false,\n        title: \"\\u0412 \\u044D\\u0442\\u043E\\u0439 \\u043A\\u043D\\u043E\\u043F\\u043A\\u0435 \\u0437\\u0430\\u043A\\u043B\\u044E\\u0447\\u0451\\u043D \\u0433\\u043B\\u0430\\u0432\\u043D\\u044B\\u0439 \\u043F\\u0440\\u0438\\u043D\\u0446\\u0438\\u043F \\u044D\\u043A\\u0437\\u0438\\u0441\\u0442\\u0435\\u043D\\u0446\\u0438\\u0430\\u043B\\u0438\\u0437\\u043C\\u0430 \\u0410\\u043B\\u044C\\u0431\\u0435\\u0440\\u0430 \\u041A\\u0430\\u043C\\u044E \\u043F\\u043E \\u0432\\u0435\\u0440\\u0441\\u0438\\u0438 \\u0410\\u043B\\u0438\\u043D\\u044B\",\n        label: \"tap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"7zZJjGiSRppMnnlYfwuyXOUEkjY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Grommet","Button","logo","AppBar","AppBarPre","theme","URL","App","state","setState","fetch","then","response","ok","Error","status","json","data","console","log","data_clean","map","item","person","fname","lname","res","i","length","push"],"sources":["/Users/alinoki/Desktop/my-app/src/App.tsx"],"sourcesContent":["import React, {useEffect, useState} /*, { Component, useState, useEffect}*/ from 'react';\nimport {\n  Grommet,\n  Button\n} from 'grommet';\nimport logo from \"./icon_sber-01.png\";\nimport './App.css';\nimport axios from 'axios';\nimport {\n  AppBar,\n  AppBarPre,\n  SearchBar\n} from './components/index';\nimport {\n  theme\n} from './constants/constants';\n\ntype titem  = {\n  fname: string,\n  lname: string,\n}\n\ntype Data  = {\n  fname: string,\n  lname: string,\n}[]\n\ntype cleanData = {\n  person: string\n}[]\n\n\n\n\nconst URL: string = 'http://www.filltext.com/?rows=10&fname={firstName}&lname={lastName}&pretty=true'\n// const fetchedData = fetch(URL)\n// .then((response) => {\n// if (!response.ok) {\n//   throw new Error(`HTTP error, status = ${response.status}`);\n// }\n// return response.json();\n// })\n// .then(\n//   (data) => {\n//     // console.log(\"sfdsferfaerfsfraserafrf\");\n//     const data_clean: cleanData = data.map((item: titem) => {\n//       return {person: item.fname + ' ' + item.lname}\n//     });\n//     // console.log(\"AAAAAAAAAAAAAAAAAAAAA\");\n//     let res: string[] = [];\n//     for (let i = 0; i < data_clean.length; i++)\n//       res.push(data_clean[i].person)\n//     console.log(res, typeof res);\n\n//     // <SearchBar options={res}></SearchBar>\n//     return res;\n//   })\n\n\n\n\n// let res = (axios.get(URL).then((response) => console.log(response.data)));\n// console.log(typeof res, res);\n//reduxtoolkit  стор сделать     ЕСЛИ ГОТОВА clm>account>store>config\n//пока без танков разюбрись как сделать стор с редах\n\n\n\nconst App = () => {\n  const [state, setState] = useState([]);\n  useEffect(() => {\n    fetch(URL)\n    .then((response) => {\n    if (!response.ok) {\n      throw new Error(`HTTP error, status = ${response.status}`);\n    }\n    return response.json();\n    })\n    .then(\n      (data: Data) => {\n        console.log(typeof data);\n        // console.log(\"sfdsferfaerfsfraserafrf\");\n        const data_clean: cleanData = data.map((item: titem) => {\n          return {person: item.fname + ' ' + item.lname}\n        });\n        // console.log(\"AAAAAAAAAAAAAAAAAAAAA\");\n        let res: string[] = [];\n        for (let i = 0; i < data_clean.length; i++)\n          res.push(data_clean[i].person)\n        console.log(res, typeof res);\n    \n        // <SearchBar options={res}></SearchBar>\n        return res;\n      })\n      .then(\n        ({data: state}) => {\n          setState(res);\n        }\n      )\n  })\n  // fetchedData.then((data) => setState(data)));\n  // useEffect(() => {}, [state]);\n  return (\n    <Grommet theme={theme}>\n      <AppBarPre ></AppBarPre>\n      <AppBar>\n        <div><img src={logo} alt=\"logo\" width=\"30px\"/>\n        <b className=\"p4\">POWERED BY ALINA</b></div>\n        <Button primary={false} title=\"В этой кнопке заключён главный принцип экзистенциализма Альбера Камю по версии Алины\" label='tap' />\n      </AppBar>\n      \n      {/* <SearchBar options={state.fetchedData}></SearchBar> */}\n    </Grommet>\n);\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAiF,OAAjF;AACA,SACEC,OADF,EAEEC,MAFF,QAGO,SAHP;AAIA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAO,WAAP;AAEA,SACEC,MADF,EAEEC,SAFF,QAIO,oBAJP;AAKA,SACEC,KADF,QAEO,uBAFP;;AAqBA,MAAMC,GAAW,GAAG,iFAApB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;;AAIA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;EACAD,SAAS,CAAC,MAAM;IACdY,KAAK,CAACJ,GAAD,CAAL,CACCK,IADD,CACOC,QAAD,IAAc;MACpB,IAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAW,wBAAuBF,QAAQ,CAACG,MAAO,EAAlD,CAAN;MACD;;MACD,OAAOH,QAAQ,CAACI,IAAT,EAAP;IACC,CAND,EAOCL,IAPD,CAQGM,IAAD,IAAgB;MACdC,OAAO,CAACC,GAAR,CAAY,OAAOF,IAAnB,EADc,CAEd;;MACA,MAAMG,UAAqB,GAAGH,IAAI,CAACI,GAAL,CAAUC,IAAD,IAAiB;QACtD,OAAO;UAACC,MAAM,EAAED,IAAI,CAACE,KAAL,GAAa,GAAb,GAAmBF,IAAI,CAACG;QAAjC,CAAP;MACD,CAF6B,CAA9B,CAHc,CAMd;;MACA,IAAIC,GAAa,GAAG,EAApB;;MACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,UAAU,CAACQ,MAA/B,EAAuCD,CAAC,EAAxC,EACED,GAAG,CAACG,IAAJ,CAAST,UAAU,CAACO,CAAD,CAAV,CAAcJ,MAAvB;;MACFL,OAAO,CAACC,GAAR,CAAYO,GAAZ,EAAiB,OAAOA,GAAxB,EAVc,CAYd;;MACA,OAAOA,GAAP;IACD,CAtBH,EAuBGf,IAvBH,CAwBI,QAAmB;MAAA,IAAlB;QAACM,IAAI,EAAET;MAAP,CAAkB;MACjBC,QAAQ,CAACiB,GAAD,CAAR;IACD,CA1BL;EA4BD,CA7BQ,CAAT,CAFgB,CAgChB;EACA;;EACA,oBACE,QAAC,OAAD;IAAS,KAAK,EAAErB,KAAhB;IAAA,wBACE,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MAAA,wBACE;QAAA,wBAAK;UAAK,GAAG,EAAEH,IAAV;UAAgB,GAAG,EAAC,MAApB;UAA2B,KAAK,EAAC;QAAjC;UAAA;UAAA;UAAA;QAAA,QAAL,eACA;UAAG,SAAS,EAAC,IAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAGE,QAAC,MAAD;QAAQ,OAAO,EAAE,KAAjB;QAAwB,KAAK,EAAC,mcAA9B;QAAqH,KAAK,EAAC;MAA3H;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CA9CD;;GAAMK,G;;KAAAA,G;AAgDN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}