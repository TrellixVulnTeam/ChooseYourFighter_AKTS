{"ast":null,"code":"var _jsxFileName = \"/Users/alinoki/Desktop/my-app/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Grommet, Button } from 'grommet';\nimport logo from \"./icon_sber-01.png\";\nimport './App.css';\nimport { AppBar, AppBarPre, SearchBar } from './components/index';\nimport { theme } from './constants/constants'; // import {titem, Data, cleanData} from './store/types'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = 'http://www.filltext.com/?rows=10&fname={firstName}&lname={lastName}&pretty=true'; // const fetchData = createAsyncThunk('fetchData', async () => {\n// \tconst response = await axios.get(\n// \t  URL,{\n// \t\theaders: {\n// \t\t  'Accept': 'application/json'\n// \t\t}\n// \t  }\n// \t);\n// \tconst data_clean: cleanData = response.data.map((item: titem) => {\n// \t\treturn {person: item.fname + ' ' + item.lname}\n// \t  });\n// \t  let res: string[] = [];\n// \t  for (let i = 0; i < data_clean.length; i++)\n// \t\tres.push(data_clean[i].person)\n// \tsetState(res);\n//   });\n// const URL: string = 'http://www.filltext.com/?rows=10&fname={firstName}&lname={lastName}&pretty=true'\n// const fetchedData = fetch(URL)\n// .then((response) => {\n// if (!response.ok) {\n//   throw new Error(`HTTP error, status = ${response.status}`);\n// }\n// return response.json();\n// })\n// .then(\n//   (data) => {\n//     // console.log(\"sfdsferfaerfsfraserafrf\");\n//     const data_clean: cleanData = data.map((item: titem) => {\n//       return {person: item.fname + ' ' + item.lname}\n//     });\n//     // console.log(\"AAAAAAAAAAAAAAAAAAAAA\");\n//     let res: string[] = [];\n//     for (let i = 0; i < data_clean.length; i++)\n//       res.push(data_clean[i].person)\n//     console.log(res, typeof res);\n//     // <SearchBar options={res}></SearchBar>\n//     return res;\n//   })\n// let res = (axios.get(URL).then((response) => console.log(response.data)));\n// console.log(typeof res, res);\n//reduxtoolkit  стор сделать     ЕСЛИ ГОТОВА clm>account>store>config\n//пока без танков разюбрись как сделать стор с редах\n\nconst App = () => {\n  _s();\n\n  const init = [];\n  const [state, setState] = useState(init);\n  useEffect(() => {//   fetch(URL)\n    //     .then((response) => {\n    //       if (!response.ok) throw new Error(`HTTP error, status = ${response.status}`);\n    //       return response.json();\n    //     })\n    //     .then(\n    //       (data: Data) => {\n    //         const data_clean: cleanData = data.map((item: titem) => {\n    //           return {person: item.fname + ' ' + item.lname}\n    //         });\n    //         let res: string[] = [];\n    //         for (let i = 0; i < data_clean.length; i++)\n    //           res.push(data_clean[i].person)\n    //         return res;\n    //       })\n    //       .then(\n    //         (data) => setState(data)\n    //       )\n  }, []);\n  useEffect(() => {\n    // async function fetchData() {\n    //   const response = await fetch(URL);\n    //   const json = await  response.json();\n    //   const data_clean: cleanData = json.map((item: titem) => {\n    //     return {person: item.fname + ' ' + item.lname}\n    //   });\n    //   let res: string[] = [];\n    //   for (let i = 0; i < data_clean.length; i++)\n    //     res.push(data_clean[i].person)\n    //   setState(res);\n    // }\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grommet, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(AppBarPre, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"logo\",\n          width: \"30px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          className: \"p4\",\n          children: \"POWERED BY ALINA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        primary: false,\n        title: \"\\u0412 \\u044D\\u0442\\u043E\\u0439 \\u043A\\u043D\\u043E\\u043F\\u043A\\u0435 \\u0437\\u0430\\u043A\\u043B\\u044E\\u0447\\u0451\\u043D \\u0433\\u043B\\u0430\\u0432\\u043D\\u044B\\u0439 \\u043F\\u0440\\u0438\\u043D\\u0446\\u0438\\u043F \\u044D\\u043A\\u0437\\u0438\\u0441\\u0442\\u0435\\u043D\\u0446\\u0438\\u0430\\u043B\\u0438\\u0437\\u043C\\u0430 \\u0410\\u043B\\u044C\\u0431\\u0435\\u0440\\u0430 \\u041A\\u0430\\u043C\\u044E \\u043F\\u043E \\u0432\\u0435\\u0440\\u0441\\u0438\\u0438 \\u0410\\u043B\\u0438\\u043D\\u044B\",\n        label: \"tap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      options: state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"5Fy6UTH2wSGNf5BMB7ODONO800Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Grommet","Button","logo","AppBar","AppBarPre","SearchBar","theme","URL","App","init","state","setState","fetchData"],"sources":["/Users/alinoki/Desktop/my-app/src/App.tsx"],"sourcesContent":["import React, {useEffect, useState} /*, { Component, useState, useEffect}*/ from 'react';\nimport {\n  Grommet,\n  Button\n} from 'grommet';\nimport logo from \"./icon_sber-01.png\";\nimport './App.css';\nimport axios from 'axios';\nimport {\n  AppBar,\n  AppBarPre,\n  SearchBar\n} from './components/index';\nimport {\n  theme\n} from './constants/constants';\n\n// import {titem, Data, cleanData} from './store/types'\nimport { /*createSlice, nanoid,*/ createAsyncThunk } from '@reduxjs/toolkit';\nimport {titem, Data, cleanData} from './store/types'\n\n\n\n\nconst URL: string = 'http://www.filltext.com/?rows=10&fname={firstName}&lname={lastName}&pretty=true'\n\n// const fetchData = createAsyncThunk('fetchData', async () => {\n// \tconst response = await axios.get(\n// \t  URL,{\n// \t\theaders: {\n// \t\t  'Accept': 'application/json'\n// \t\t}\n// \t  }\n// \t);\n// \tconst data_clean: cleanData = response.data.map((item: titem) => {\n// \t\treturn {person: item.fname + ' ' + item.lname}\n// \t  });\n// \t  let res: string[] = [];\n// \t  for (let i = 0; i < data_clean.length; i++)\n// \t\tres.push(data_clean[i].person)\n// \tsetState(res);\n//   });\n\n\n\n\n\n\n\n\n\n// const URL: string = 'http://www.filltext.com/?rows=10&fname={firstName}&lname={lastName}&pretty=true'\n// const fetchedData = fetch(URL)\n// .then((response) => {\n// if (!response.ok) {\n//   throw new Error(`HTTP error, status = ${response.status}`);\n// }\n// return response.json();\n// })\n// .then(\n//   (data) => {\n//     // console.log(\"sfdsferfaerfsfraserafrf\");\n//     const data_clean: cleanData = data.map((item: titem) => {\n//       return {person: item.fname + ' ' + item.lname}\n//     });\n//     // console.log(\"AAAAAAAAAAAAAAAAAAAAA\");\n//     let res: string[] = [];\n//     for (let i = 0; i < data_clean.length; i++)\n//       res.push(data_clean[i].person)\n//     console.log(res, typeof res);\n\n//     // <SearchBar options={res}></SearchBar>\n//     return res;\n//   })\n\n\n\n\n// let res = (axios.get(URL).then((response) => console.log(response.data)));\n// console.log(typeof res, res);\n//reduxtoolkit  стор сделать     ЕСЛИ ГОТОВА clm>account>store>config\n//пока без танков разюбрись как сделать стор с редах\n\n\n\nconst App = () => {\n  const init: string[] = [];\n  const [state, setState] = useState(init);\n  useEffect(() => {\n  //   fetch(URL)\n  //     .then((response) => {\n  //       if (!response.ok) throw new Error(`HTTP error, status = ${response.status}`);\n  //       return response.json();\n  //     })\n  //     .then(\n  //       (data: Data) => {\n  //         const data_clean: cleanData = data.map((item: titem) => {\n  //           return {person: item.fname + ' ' + item.lname}\n  //         });\n  //         let res: string[] = [];\n  //         for (let i = 0; i < data_clean.length; i++)\n  //           res.push(data_clean[i].person)\n  //         return res;\n  //       })\n  //       .then(\n  //         (data) => setState(data)\n  //       )\n  }, []);\n\n\n  useEffect(() => {\n    // async function fetchData() {\n    //   const response = await fetch(URL);\n    //   const json = await  response.json();\n    //   const data_clean: cleanData = json.map((item: titem) => {\n    //     return {person: item.fname + ' ' + item.lname}\n    //   });\n    //   let res: string[] = [];\n    //   for (let i = 0; i < data_clean.length; i++)\n    //     res.push(data_clean[i].person)\n    //   setState(res);\n    // }\n    fetchData();\n  }, []);\n\n  return (\n    <Grommet theme={theme}>\n      <AppBarPre ></AppBarPre>\n      <AppBar>\n        <div><img src={logo} alt=\"logo\" width=\"30px\"/>\n        <b className=\"p4\">POWERED BY ALINA</b></div>\n        <Button primary={false} title=\"В этой кнопке заключён главный принцип экзистенциализма Альбера Камю по версии Алины\" label='tap' />\n      </AppBar>\n      <SearchBar options={state}></SearchBar>\n    </Grommet>\n);\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAiF,OAAjF;AACA,SACEC,OADF,EAEEC,MAFF,QAGO,SAHP;AAIA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAO,WAAP;AAEA,SACEC,MADF,EAEEC,SAFF,EAGEC,SAHF,QAIO,oBAJP;AAKA,SACEC,KADF,QAEO,uBAFP,C,CAIA;;;AAOA,MAAMC,GAAW,GAAG,iFAApB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;;AAIA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAMC,IAAc,GAAG,EAAvB;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAACU,IAAD,CAAlC;EACAX,SAAS,CAAC,MAAM,CAChB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACC,CAnBQ,EAmBN,EAnBM,CAAT;EAsBAA,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAc,SAAS;EACV,CAbQ,EAaN,EAbM,CAAT;EAeA,oBACE,QAAC,OAAD;IAAS,KAAK,EAAEN,KAAhB;IAAA,wBACE,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MAAA,wBACE;QAAA,wBAAK;UAAK,GAAG,EAAEJ,IAAV;UAAgB,GAAG,EAAC,MAApB;UAA2B,KAAK,EAAC;QAAjC;UAAA;UAAA;UAAA;QAAA,QAAL,eACA;UAAG,SAAS,EAAC,IAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAGE,QAAC,MAAD;QAAQ,OAAO,EAAE,KAAjB;QAAwB,KAAK,EAAC,mcAA9B;QAAqH,KAAK,EAAC;MAA3H;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAOE,QAAC,SAAD;MAAW,OAAO,EAAEQ;IAApB;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CAnDD;;GAAMF,G;;KAAAA,G;AAqDN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}