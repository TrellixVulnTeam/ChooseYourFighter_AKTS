{"ast":null,"code":"var _jsxFileName = \"/Users/alinoki/Desktop/my-app/src/components/SearchBar/SearchBar.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Select } from 'grommet';\nimport { addProductIndex, addProductsList } from '../../store/Slices/productListSlice';\nimport { addProducts } from '../../store/Slices/productsSlice';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport '../../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  sentence\n} = require('txtgen/dist/cjs/txtgen.js');\n\nexport const SearchBar = props => {\n  _s();\n\n  const indexes = [];\n  const products = useSelector(state => state.products.chosen_products);\n  const [value] = React.useState();\n  const dispatch = useDispatch();\n  let ProductsInfo = new Array(10);\n  let i = 0;\n\n  while (i < 10) {\n    // ProductsInfo[i].name = props.arr[i];\n    ProductsInfo[i].age = Math.ceil(Math.random() * 100);\n    ProductsInfo[i].phrase = sentence();\n    console.log(ProductsInfo);\n    i++;\n  }\n\n  console.log(ProductsInfo); // dispatch(addProductsObjectArray(ProductsInfo));\n\n  dispatch(addProductsList(props.options));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: e => {\n      //TODO this func could be MUCH MORE EASIER \n      let str;\n      let index;\n\n      if (e.target.innerText) {\n        //вытаскиваем текст из хтмл описания места куда тыкнули и если там внутри есть имечко то движемся дальше\n        str = e.target.innerText;\n        index = props.options.indexOf(str); //ищем индекс имени\n\n        if (index >= 0 && index < props.options.length && products.find(i => i === str) !== str) {\n          indexes.push(index);\n          dispatch(addProductIndex(props.options.indexOf(str))); //изменяем глобальный стейт, добавляя туда индексы тыкнутых чечиков\n\n          dispatch(addProducts(str)); //\n          // console.log(indexes, '\\n', index, '\\n', indexes.find((i) => i == index));\n        }\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      placeholder: \"Choose your fighter\",\n      options: props.options,\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n};\n\n_s(SearchBar, \"hpYUOUwgXQw/qxRo3KBV/UFAiLk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","Select","addProductIndex","addProductsList","addProducts","useDispatch","useSelector","sentence","require","SearchBar","props","indexes","products","state","chosen_products","value","useState","dispatch","ProductsInfo","Array","i","age","Math","ceil","random","phrase","console","log","options","e","str","index","target","innerText","indexOf","length","find","push"],"sources":["/Users/alinoki/Desktop/my-app/src/components/SearchBar/SearchBar.tsx"],"sourcesContent":["import React from 'react';\nimport {Select} from 'grommet';\nimport {addProductIndex, addProductsList } from '../../store/Slices/productListSlice';\nimport { addProducts } from '../../store/Slices/productsSlice';\nimport {useDispatch} from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport '../../App.css'\nimport { RootState } from '../../store';\nimport { IProductsInfo } from '../../store/Slices/productsSlice';\nimport { addProductsObjectArray } from '../../store/Slices/productsSlice';\nconst { sentence } = require('txtgen/dist/cjs/txtgen.js');\n\n\nexport const SearchBar = (props: {options: string[]}) => {\n\t\tconst indexes: number[] = [];\n\t\tconst products = useSelector((state: RootState) => state.products.chosen_products);\n\t\tconst [value] = React.useState();\n\t\tconst dispatch = useDispatch();\n\t\tlet ProductsInfo: IProductsInfo[] = new Array(10);\n\t\tlet i: number = 0;\n\t\twhile (i < 10) {\n\t\t\t// ProductsInfo[i].name = props.arr[i];\n\t\t\tProductsInfo[i].age = Math.ceil(Math.random() * 100);\n\t\t\tProductsInfo[i].phrase = sentence();\n\t\t\tconsole.log(ProductsInfo);\n\t\t\ti++;\n\t\t}\n\t\tconsole.log(ProductsInfo);\n\t\t// dispatch(addProductsObjectArray(ProductsInfo));\n\n\t\tdispatch(addProductsList(props.options))\n\t\treturn (\n        \t<div onClick={(e) => {\n\t\t\t\t//TODO this func could be MUCH MORE EASIER \n\t\t\t\t\tlet str: string;\n\t\t\t\t\tlet index: number;\n\t\t\t\t\tif ((e.target as HTMLElement).innerText) { //вытаскиваем текст из хтмл описания места куда тыкнули и если там внутри есть имечко то движемся дальше\n\t\t\t\t\t\tstr = (e.target as HTMLElement).innerText;\n\t\t\t\t\t\tindex = props.options.indexOf(str); //ищем индекс имени\n\t\t\t\t\t\tif (index >= 0 && index < props.options.length && \n\t\t\t\t\t\t\t\t(products.find((i) => i === str)) !== str) {\n\t\t\t\t\t\t\tindexes.push(index);\n\t\t\t\t\t\t\tdispatch(addProductIndex(props.options.indexOf(str))); //изменяем глобальный стейт, добавляя туда индексы тыкнутых чечиков\n\t\t\t\t\t\t\tdispatch(addProducts(str)); //\n\t\t\t\t\t\t\t// console.log(indexes, '\\n', index, '\\n', indexes.find((i) => i == index));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t}\n          \t>\n          \t<Select\n            \tplaceholder=\"Choose your fighter\"\n            \toptions={props.options}\n            \tvalue={value}\n        \t/>\n        \t</div>\t\n      );\n};"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,SAArB;AACA,SAAQC,eAAR,EAAyBC,eAAzB,QAAgD,qCAAhD;AACA,SAASC,WAAT,QAA4B,kCAA5B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,eAAP;;;AAIA,MAAM;EAAEC;AAAF,IAAeC,OAAO,CAAC,2BAAD,CAA5B;;AAGA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAgC;EAAA;;EACvD,MAAMC,OAAiB,GAAG,EAA1B;EACA,MAAMC,QAAQ,GAAGN,WAAW,CAAEO,KAAD,IAAsBA,KAAK,CAACD,QAAN,CAAeE,eAAtC,CAA5B;EACA,MAAM,CAACC,KAAD,IAAUf,KAAK,CAACgB,QAAN,EAAhB;EACA,MAAMC,QAAQ,GAAGZ,WAAW,EAA5B;EACA,IAAIa,YAA6B,GAAG,IAAIC,KAAJ,CAAU,EAAV,CAApC;EACA,IAAIC,CAAS,GAAG,CAAhB;;EACA,OAAOA,CAAC,GAAG,EAAX,EAAe;IACd;IACAF,YAAY,CAACE,CAAD,CAAZ,CAAgBC,GAAhB,GAAsBC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgB,GAA1B,CAAtB;IACAN,YAAY,CAACE,CAAD,CAAZ,CAAgBK,MAAhB,GAAyBlB,QAAQ,EAAjC;IACAmB,OAAO,CAACC,GAAR,CAAYT,YAAZ;IACAE,CAAC;EACD;;EACDM,OAAO,CAACC,GAAR,CAAYT,YAAZ,EAduD,CAevD;;EAEAD,QAAQ,CAACd,eAAe,CAACO,KAAK,CAACkB,OAAP,CAAhB,CAAR;EACA,oBACO;IAAK,OAAO,EAAGC,CAAD,IAAO;MAC1B;MACC,IAAIC,GAAJ;MACA,IAAIC,KAAJ;;MACA,IAAKF,CAAC,CAACG,MAAH,CAA0BC,SAA9B,EAAyC;QAAE;QAC1CH,GAAG,GAAID,CAAC,CAACG,MAAH,CAA0BC,SAAhC;QACAF,KAAK,GAAGrB,KAAK,CAACkB,OAAN,CAAcM,OAAd,CAAsBJ,GAAtB,CAAR,CAFwC,CAEJ;;QACpC,IAAIC,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAGrB,KAAK,CAACkB,OAAN,CAAcO,MAApC,IACDvB,QAAQ,CAACwB,IAAT,CAAehB,CAAD,IAAOA,CAAC,KAAKU,GAA3B,CAAD,KAAsCA,GADxC,EAC6C;UAC5CnB,OAAO,CAAC0B,IAAR,CAAaN,KAAb;UACAd,QAAQ,CAACf,eAAe,CAACQ,KAAK,CAACkB,OAAN,CAAcM,OAAd,CAAsBJ,GAAtB,CAAD,CAAhB,CAAR,CAF4C,CAEW;;UACvDb,QAAQ,CAACb,WAAW,CAAC0B,GAAD,CAAZ,CAAR,CAH4C,CAGhB;UAC5B;QACA;MACD;IACD,CAfI;IAAA,uBAkBE,QAAC,MAAD;MACE,WAAW,EAAC,qBADd;MAEE,OAAO,EAAEpB,KAAK,CAACkB,OAFjB;MAGE,KAAK,EAAEb;IAHT;MAAA;MAAA;MAAA;IAAA;EAlBF;IAAA;IAAA;IAAA;EAAA,QADP;AA0BD,CA5CM;;GAAMN,S;UAEMH,W,EAEAD,W;;;KAJNI,S"},"metadata":{},"sourceType":"module"}