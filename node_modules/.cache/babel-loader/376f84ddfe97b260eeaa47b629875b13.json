{"ast":null,"code":"var _jsxFileName = \"/Users/alinoki/Desktop/my-app/src/components/FlipCard/CardFlip.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Card, CardBody } from \"grommet\";\nimport React from \"react\";\nimport ReactCardFlip from 'react-card-flip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// export const CardFlip = (props: CounterState) => {\nexport const CardFlip = () => {\n  _s();\n\n  const [isFlipped, setIsFlipped] = React.useState(false);\n  const indexes = useSelector(state => state.counter.productsIndex);\n  const products = useSelector(state => state.counter.productsList); // console.log(project);\n\n  return /*#__PURE__*/_jsxDEV(ReactCardFlip, {\n    isFlipped: isFlipped,\n    flipDirection: \"horizontal\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onMouseEnter: () => setIsFlipped(prev => !prev),\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"card-hover color-6\",\n        children: [/*#__PURE__*/_jsxDEV(CardBody, {\n          children: [\"Fighter: \", props.product]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          align: \"top\",\n          children: \" *name*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onMouseLeave: () => setIsFlipped(prev => !prev),\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"card-hover color-6\",\n        children: [/*#__PURE__*/_jsxDEV(CardBody, {\n          children: \"Fighter info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: \"*info*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 4\n  }, this);\n};\n\n_s(CardFlip, \"pWxsIOHvNJxShwDRAVZKoMVeFtc=\", true);\n\n_c = CardFlip;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardFlip\");","map":{"version":3,"names":["Box","Card","CardBody","React","ReactCardFlip","CardFlip","isFlipped","setIsFlipped","useState","indexes","useSelector","state","counter","productsIndex","products","productsList","prev","props","product"],"sources":["/Users/alinoki/Desktop/my-app/src/components/FlipCard/CardFlip.tsx"],"sourcesContent":["import { Box, Card, CardBody } from \"grommet\";\nimport React from \"react\";\nimport ReactCardFlip from 'react-card-flip';\nimport { CounterState } from \"../../store/productListSlice\";\n\n// export const CardFlip = (props: CounterState) => {\n\texport const CardFlip = () => {\n\tconst [isFlipped, setIsFlipped] = React.useState(false);\n\tconst indexes = useSelector((state: RootState) => state.counter.productsIndex)\n\tconst products = useSelector((state: RootState) => state.counter.productsList)\n\t// console.log(project);\n\treturn (\n\t  <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\">\n\t\t\t\n\t\t<div onMouseEnter={() => setIsFlipped((prev) => !prev)}>\n\t\t  \n\t\t<Card className=\"card-hover color-6\">\n\t\t\t<CardBody>Fighter: {props.product}</CardBody>\n\t\t   <Box align='top'> *name*</Box>\n\t\t</Card>\n\t\t</div>\n\t\t<div onMouseLeave={() => setIsFlipped((prev) => !prev)}>\n\t\t<Card className=\"card-hover color-6\">\n\t\t\t<CardBody>Fighter info</CardBody>\n\t\t   <Box >*info*</Box>\n\t\t</Card>     \n\t\t</div>\n\t  </ReactCardFlip>\n\t);\n  };"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,QAApB,QAAoC,SAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAGA;AACC,OAAO,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EAC9B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,KAAK,CAACK,QAAN,CAAe,KAAf,CAAlC;EACA,MAAMC,OAAO,GAAGC,WAAW,CAAEC,KAAD,IAAsBA,KAAK,CAACC,OAAN,CAAcC,aAArC,CAA3B;EACA,MAAMC,QAAQ,GAAGJ,WAAW,CAAEC,KAAD,IAAsBA,KAAK,CAACC,OAAN,CAAcG,YAArC,CAA5B,CAH8B,CAI9B;;EACA,oBACE,QAAC,aAAD;IAAe,SAAS,EAAET,SAA1B;IAAqC,aAAa,EAAC,YAAnD;IAAA,wBAED;MAAK,YAAY,EAAE,MAAMC,YAAY,CAAES,IAAD,IAAU,CAACA,IAAZ,CAArC;MAAA,uBAEA,QAAC,IAAD;QAAM,SAAS,EAAC,oBAAhB;QAAA,wBACC,QAAC,QAAD;UAAA,wBAAoBC,KAAK,CAACC,OAA1B;QAAA;UAAA;UAAA;UAAA;QAAA,QADD,eAEG,QAAC,GAAD;UAAK,KAAK,EAAC,KAAX;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFH;MAAA;QAAA;QAAA;QAAA;MAAA;IAFA;MAAA;MAAA;MAAA;IAAA,QAFC,eASD;MAAK,YAAY,EAAE,MAAMX,YAAY,CAAES,IAAD,IAAU,CAACA,IAAZ,CAArC;MAAA,uBACA,QAAC,IAAD;QAAM,SAAS,EAAC,oBAAhB;QAAA,wBACC,QAAC,QAAD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADD,eAEG,QAAC,GAAD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFH;MAAA;QAAA;QAAA;QAAA;MAAA;IADA;MAAA;MAAA;MAAA;IAAA,QATC;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBE,CAvBK;;GAAMX,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}