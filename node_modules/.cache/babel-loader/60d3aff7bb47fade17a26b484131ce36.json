{"ast":null,"code":"var _jsxFileName = \"/Users/alinoki/Desktop/my-app/src/components/SearchBar/SearchBar.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Select } from 'grommet';\nimport { addProductIndex, addProductsList } from '../../store/Slices/productListSlice';\nimport { addProducts } from '../../store/Slices/productsSlice';\nimport { useDispatch } from 'react-redux';\n// import { CardFlip } from '../FlipCard/CardFlip';\nimport '../../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SearchBar = props => {\n  _s();\n\n  // const indexes = useSelector((state: RootState) => state.counter.productsIndex)\n  const indexes = []; // const products = useSelector((state: RootState) => state.counter.productsList)\n\n  const [value] = React.useState();\n  const dispatch = useDispatch();\n  dispatch(addProductsList(props.options));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: e => {\n        //TODO вообще-то можно просто сразу имена передавать НО МНЕ ЖАЛЬ ЭТО ЗАТИРАТЬ\n        let str;\n        let index;\n\n        if (e.target.innerText) {\n          //вытаскиваем текст из хтмл описания места куда тыкнули и если там внутри есть имечко то движемся дальше\n          str = e.target.innerText;\n          index = props.options.indexOf(str); //ищем индекс имени\n\n          if (index >= 0 && index < props.options.length && indexes.find(i => i === index) != index) {\n            indexes.push(index);\n            dispatch(addProductIndex(props.options.indexOf(str))); //изменяем глобальный стейт, добавляя туда индексы тыкнутых чечиков\n\n            dispatch(addProducts(str)); //\n            // console.log(indexes, '\\n', index, '\\n', indexes.find((i) => i == index));\n          }\n        } // console.log(count1);\n\n      },\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"Choose your fighter\",\n        options: props.options,\n        value: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}; // export const AddCard = () => {\n// }\n\n_s(SearchBar, \"ZbTRY/+wOLJ2ZfMzoNrx6CZwCbY=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","Select","addProductIndex","addProductsList","addProducts","useDispatch","SearchBar","props","indexes","value","useState","dispatch","options","e","str","index","target","innerText","indexOf","length","find","i","push"],"sources":["/Users/alinoki/Desktop/my-app/src/components/SearchBar/SearchBar.tsx"],"sourcesContent":["import React from 'react';\nimport {Select} from 'grommet';\nimport {addProductIndex, addProductsList } from '../../store/Slices/productListSlice';\nimport { addProducts } from '../../store/Slices/productsSlice';\nimport {useDispatch} from 'react-redux';\nimport { RootState } from '../../store';\nimport { useSelector } from 'react-redux';\n// import { CardFlip } from '../FlipCard/CardFlip';\nimport '../../App.css'\n\n\nexport const SearchBar = (props: {options: string[]}) => {\n\t\t// const indexes = useSelector((state: RootState) => state.counter.productsIndex)\n\t\tconst indexes: number[] = [];\n\t\t// const products = useSelector((state: RootState) => state.counter.productsList)\n\t  const [value] = React.useState();\n\t  const dispatch = useDispatch();\n\t  dispatch(addProductsList(props.options))\n\t  return (\n\t\t<>\n          <div onClick={(e) => {\n\t\t\t//TODO вообще-то можно просто сразу имена передавать НО МНЕ ЖАЛЬ ЭТО ЗАТИРАТЬ\n            \tlet str: string;\n\t\t\t\tlet index: number;\n            \tif ((e.target as HTMLElement).innerText) { //вытаскиваем текст из хтмл описания места куда тыкнули и если там внутри есть имечко то движемся дальше\n\t\t\t\t\tstr = (e.target as HTMLElement).innerText;\n\t\t\t\t\tindex = props.options.indexOf(str); //ищем индекс имени\n\t\t\t\t\tif (index >= 0 && index < props.options.length && (indexes.find((i) => i === index)) != index) {\n\t\t\t\t\t\tindexes.push(index);\n\t\t\t\t\t\tdispatch(addProductIndex(props.options.indexOf(str))); //изменяем глобальный стейт, добавляя туда индексы тыкнутых чечиков\n\t\t\t\t\t\tdispatch(addProducts(str)); //\n\t\t\t\t\t\t// console.log(indexes, '\\n', index, '\\n', indexes.find((i) => i == index));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// console.log(count1);\n          }\n          }\n          >\n          <Select\n            placeholder=\"Choose your fighter\"\n            options={props.options}\n            value={value}\n          />\n          </div>\t\n\t\t  </>\n      );\n};\n\n\n// export const AddCard = () => {\n\n// }"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,SAArB;AACA,SAAQC,eAAR,EAAyBC,eAAzB,QAAgD,qCAAhD;AACA,SAASC,WAAT,QAA4B,kCAA5B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAGA;AACA,OAAO,eAAP;;;AAGA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAgC;EAAA;;EACvD;EACA,MAAMC,OAAiB,GAAG,EAA1B,CAFuD,CAGvD;;EACC,MAAM,CAACC,KAAD,IAAUT,KAAK,CAACU,QAAN,EAAhB;EACA,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;EACAM,QAAQ,CAACR,eAAe,CAACI,KAAK,CAACK,OAAP,CAAhB,CAAR;EACA,oBACD;IAAA,uBACQ;MAAK,OAAO,EAAGC,CAAD,IAAO;QAC5B;QACU,IAAIC,GAAJ;QACT,IAAIC,KAAJ;;QACS,IAAKF,CAAC,CAACG,MAAH,CAA0BC,SAA9B,EAAyC;UAAE;UACnDH,GAAG,GAAID,CAAC,CAACG,MAAH,CAA0BC,SAAhC;UACAF,KAAK,GAAGR,KAAK,CAACK,OAAN,CAAcM,OAAd,CAAsBJ,GAAtB,CAAR,CAFiD,CAEb;;UACpC,IAAIC,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAGR,KAAK,CAACK,OAAN,CAAcO,MAApC,IAA+CX,OAAO,CAACY,IAAR,CAAcC,CAAD,IAAOA,CAAC,KAAKN,KAA1B,CAAD,IAAsCA,KAAxF,EAA+F;YAC9FP,OAAO,CAACc,IAAR,CAAaP,KAAb;YACAJ,QAAQ,CAACT,eAAe,CAACK,KAAK,CAACK,OAAN,CAAcM,OAAd,CAAsBJ,GAAtB,CAAD,CAAhB,CAAR,CAF8F,CAEvC;;YACvDH,QAAQ,CAACP,WAAW,CAACU,GAAD,CAAZ,CAAR,CAH8F,CAGlE;YAC5B;UACA;QACD,CAb0B,CAc3B;;MACO,CAfD;MAAA,uBAkBA,QAAC,MAAD;QACE,WAAW,EAAC,qBADd;QAEE,OAAO,EAAEP,KAAK,CAACK,OAFjB;QAGE,KAAK,EAAEH;MAHT;QAAA;QAAA;QAAA;MAAA;IAlBA;MAAA;MAAA;MAAA;IAAA;EADR,iBADC;AA4BF,CAnCM,C,CAsCP;AAEA;;GAxCaH,S;UAKOD,W;;;KALPC,S"},"metadata":{},"sourceType":"module"}