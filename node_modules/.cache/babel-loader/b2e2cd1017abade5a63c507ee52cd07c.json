{"ast":null,"code":"import {\n/*createSlice, nanoid,*/\ncreateAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const fetchProductList = createAsyncThunk('productList/fetchProductList', async () => {\n  const response = await axios.get('https://petstore.swagger.io/v2/pet/findByStatus?status=available');\n  return response.data.productList;\n});\nconsole.log(fetchProductList.toString()); //   export const productListSlice = createSlice({\n// \tname: 'productList',\n// \tinitialState: {\n// \t  todoList: [],\n// \t  status: 'idle',\n// \t  error: null,\n// \t},\n// \treducers: {\n// \t  addProduct: {\n// \t\treducer: (state, action) => {\n// \t\t  state.todoList.push(...action.payload);\n// \t\t},\n// \t\tprepare(value) {\n// \t\t  return {\n// \t\t\tpayload: {\n// \t\t\t  key: nanoid(),\n// \t\t\t  value: value,\n// \t\t\t},\n// \t\t  };\n// \t\t},\n// \t  },\n// \t},\n// \textraReducers: {\n// \t  [fetchProductList.pending]: (state, action) => {\n// \t\tstate.status = 'loading';\n// \t  },\n// \t  [fetchProductList.fulfilled]: (state, action) => {\n// \t\tstate.status = 'succeeded';\n// \t\tstate.todoList.push(...action.payload);\n// \t  },\n// \t  [fetchProductList.rejected]: (state, action) => {\n// \t\tstate.status = 'failed';\n// \t\tstate.error = action.error.message;\n// \t  },\n// \t},\n//   });","map":{"version":3,"names":["createAsyncThunk","axios","fetchProductList","response","get","data","productList","console","log","toString"],"sources":["/Users/alinoki/Desktop/my-app/src/store/productListSlice.ts"],"sourcesContent":["import { /*createSlice, nanoid,*/ createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const fetchProductList = createAsyncThunk('productList/fetchProductList', async () => {\n\tconst response = await axios.get(\n\t  'https://petstore.swagger.io/v2/pet/findByStatus?status=available'\n\t);\n\treturn response.data.productList;\n  });\n\n  console.log(fetchProductList.toString());\n//   export const productListSlice = createSlice({\n// \tname: 'productList',\n// \tinitialState: {\n// \t  todoList: [],\n// \t  status: 'idle',\n// \t  error: null,\n// \t},\n// \treducers: {\n// \t  addProduct: {\n// \t\treducer: (state, action) => {\n// \t\t  state.todoList.push(...action.payload);\n// \t\t},\n// \t\tprepare(value) {\n// \t\t  return {\n// \t\t\tpayload: {\n// \t\t\t  key: nanoid(),\n// \t\t\t  value: value,\n// \t\t\t},\n// \t\t  };\n// \t\t},\n// \t  },\n// \t},\n// \textraReducers: {\n// \t  [fetchProductList.pending]: (state, action) => {\n// \t\tstate.status = 'loading';\n// \t  },\n// \t  [fetchProductList.fulfilled]: (state, action) => {\n// \t\tstate.status = 'succeeded';\n// \t\tstate.todoList.push(...action.payload);\n// \t  },\n// \t  [fetchProductList.rejected]: (state, action) => {\n// \t\tstate.status = 'failed';\n// \t\tstate.error = action.error.message;\n// \t  },\n// \t},\n//   });"],"mappings":"AAAA;AAAS;AAAyBA,gBAAlC,QAA0D,kBAA1D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,gBAAgB,GAAGF,gBAAgB,CAAC,8BAAD,EAAiC,YAAY;EAC5F,MAAMG,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAN,CACrB,kEADqB,CAAvB;EAGA,OAAOD,QAAQ,CAACE,IAAT,CAAcC,WAArB;AACE,CAL6C,CAAzC;AAOLC,OAAO,CAACC,GAAR,CAAYN,gBAAgB,CAACO,QAAjB,EAAZ,E,CACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}